# TEST CONFIGURATION BEGIN
# ConceptDriftStream(alpha=0.0, drift_stream=RegressionGenerator(n_features=10, n_informative=10, n_samples=500000, n_targets=1, random_state=4), position=375000.0, random_state=None, stream=ConceptDriftStream(alpha=0.0, drift_stream=RegressionGenerator(n_features=10, n_informative=10, n_samples=500000, n_targets=1, random_state=3), position=250000.0, random_state=None, stream=ConceptDriftStream(alpha=0.0, drift_stream=RegressionGenerator(n_features=10, n_informative=10, n_samples=500000, n_targets=1, random_state=2), position=125000.0, random_state=None, stream=RegressionGenerator(n_features=10, n_informative=10, n_samples=500000, n_targets=1, random_state=1), width=1), width=1), width=1)
# [D+RESET] AdaptiveSemiRegressorJr(detect_drift=True, learning_rate=0.3, max_buffer=None, max_depth=6, max_window_size=1000, min_window_size=1, pre_train=None, ratio_unsampled=None, small_window_size=None, unic='N')
# [RESET] AdaptiveSemiRegressorJULIA(learning_rate=0.3, max_buffer=None, max_depth=6, max_window_size=1000, min_window_size=1, pre_train=None, ratio_unsampled=None, small_window_size=None)
# [D] AdaptiveSemiRegressorJ(detect_drift=True, learning_rate=0.3, max_buffer=None, max_depth=6, max_window_size=1000, min_window_size=1, pre_train=None, ratio_unsampled=None, small_window_size=None, unic='N')
# [semRESET] AdaptiveSemiRegressorJS(learning_rate=0.3, max_buffer=None, max_depth=6, max_window_size=1000, min_window_size=1, pre_train=None, ratio_unsampled=None, small_window_size=None)
# [HTR] HoeffdingTreeRegressor(binary_split=False, grace_period=200, leaf_prediction='perceptron', learning_ratio_const=True, learning_ratio_decay=0.001, learning_ratio_perceptron=0.02, max_byte_size=33554432, memory_estimate_period=1000000, nb_threshold=0, no_preprune=False, nominal_attributes=None, random_state=1, remove_poor_atts=False, split_confidence=1e-07, stop_mem_management=False, tie_threshold=0.05)
# EvaluatePrequential(batch_size=1, data_points_for_classification=False, max_samples=500000, max_time=inf, metrics=['mean_square_error', 'running_time'], n_wait=200, output_file='out', pretrain_size=0, restart_stream=True, show_plot=True)
# TEST CONFIGURATION END
id,mean_mse_[D+RESET],current_mse_[D+RESET],mean_mse_[RESET],current_mse_[RESET],mean_mse_[D],current_mse_[D],mean_mse_[semRESET],current_mse_[semRESET],mean_mse_[HTR],current_mse_[HTR],training_time_[D+RESET],testing_time_[D+RESET],total_running_time_[D+RESET],training_time_[RESET],testing_time_[RESET],total_running_time_[RESET],training_time_[D],testing_time_[D],total_running_time_[D],training_time_[semRESET],testing_time_[semRESET],total_running_time_[semRESET],training_time_[HTR],testing_time_[HTR],total_running_time_[HTR]
199,25617.387150,25617.387150,24338.458903,24338.458903,23151.345403,23151.345403,23420.472630,23420.472630,32031.095185,32031.095185,0.089377,0.052427,0.141805,0.017120,0.054629,0.071749,0.081434,0.043659,0.125093,0.016789,0.042517,0.059306,0.027605,0.004895,0.032500
399,20528.958707,15440.530263,19824.676121,15310.893340,19328.777245,15506.209087,19235.237693,15050.002757,24823.833747,17616.572308,0.142492,0.088152,0.230644,0.021278,0.092867,0.114145,0.126911,0.076629,0.203540,0.020433,0.080090,0.100523,0.058453,0.009861,0.068313
599,19323.570916,16912.795336,18461.144640,15734.081678,17952.897964,15201.139401,17838.674551,15045.548265,19921.699538,10117.431121,0.191395,0.115688,0.307083,0.027077,0.118314,0.145391,0.172336,0.101322,0.273658,0.024841,0.104326,0.129167,0.089769,0.014551,0.104320
799,17643.092612,12601.657700,17444.052660,14392.776719,16572.855116,12432.726573,16848.986870,13879.923830,17092.491458,8604.867217,0.277748,0.143398,0.421146,0.028314,0.143778,0.172093,0.250942,0.126417,0.377359,0.026032,0.130665,0.156697,0.122789,0.019555,0.142344
999,16821.228290,13533.770998,17374.264533,17095.112027,15921.367673,13315.417898,16777.572363,16491.914334,15514.117588,9200.622109,0.362195,0.168903,0.531098,0.029613,0.167272,0.196885,0.345462,0.149302,0.494764,0.027304,0.153679,0.180983,0.156668,0.024181,0.180849
1199,14979.685223,5771.969888,16797.224820,13912.026255,14288.556820,6124.502559,16234.471068,13518.964592,14285.455478,8142.144927,0.464237,0.196675,0.660912,0.039137,0.192961,0.232097,0.410308,0.174218,0.584526,0.035971,0.178232,0.214203,0.191847,0.029021,0.220868
1399,13700.076786,6022.426167,16522.138627,14871.621466,13051.417005,5628.578114,15994.532581,14554.901660,13783.161717,10769.399153,0.546797,0.224984,0.771781,0.040376,0.219345,0.259722,0.492271,0.199600,0.691872,0.037163,0.203485,0.240648,0.227854,0.033521,0.261375
1599,12816.060972,6627.950271,15998.398492,12332.217547,12440.288833,8162.391631,15517.556471,12178.723701,13247.023101,9494.052786,0.611202,0.249161,0.860363,0.041684,0.242050,0.283733,0.551623,0.221549,0.773172,0.038477,0.224852,0.263329,0.257273,0.037845,0.295118
1799,12329.960361,8441.155478,15732.029773,13601.080020,11901.952420,7595.261115,15297.036717,13532.878688,12762.645448,8887.624223,0.711107,0.276449,0.987556,0.043261,0.267958,0.311219,0.604292,0.246870,0.851162,0.039950,0.249260,0.289210,0.271850,0.042579,0.314429
1999,11848.065251,7511.009261,15547.625557,13887.987617,11534.596815,8228.396371,15143.650760,13763.177144,12203.097034,7167.161307,0.773848,0.329396,1.103244,0.044974,0.292623,0.337596,0.720022,0.271959,0.991982,0.041682,0.274789,0.316471,0.295374,0.047598,0.342973
2199,11144.501053,4108.859068,14713.077904,6367.601375,10896.526478,4515.823110,14275.386271,5592.741378,11695.474385,6619.247900,0.909036,0.368649,1.277685,0.052223,0.329872,0.382095,0.796524,0.306793,1.103318,0.048775,0.308593,0.357367,0.321655,0.054031,0.375686
2399,10505.007073,3470.573297,13967.801076,5769.755970,10332.237704,4125.061185,13494.048674,4899.335113,11187.709790,5602.299239,0.948944,0.394030,1.342974,0.053373,0.352352,0.405726,0.843577,0.328680,1.172257,0.049937,0.330571,0.380508,0.337106,0.058918,0.396024
2599,9942.243751,3189.083889,13293.916129,5207.296766,9770.918498,3035.088029,12807.182565,4564.789258,10764.973235,5692.134580,1.006160,0.420421,1.426581,0.054788,0.376057,0.430845,0.939593,0.353005,1.292599,0.051265,0.354996,0.406260,0.366773,0.063935,0.430708
2799,9474.474493,3393.474129,12729.807176,5396.390774,9308.863040,3302.142084,12224.877615,4654.913264,10438.072467,6188.362481,1.057458,0.448562,1.506020,0.056416,0.401382,0.457798,0.979185,0.377280,1.356465,0.052790,0.379143,0.431933,0.390059,0.068911,0.458970
2999,9070.190347,3410.212315,12254.540147,5600.801754,8904.865746,3248.903627,11739.525778,4944.600051,10231.603053,7341.031261,1.113811,0.472637,1.586448,0.057998,0.423355,0.481353,1.016763,0.398584,1.415347,0.054329,0.401120,0.455449,0.405836,0.073787,0.479623
3199,8693.886960,3049.336146,11738.128997,3991.961741,8546.618009,3172.901957,11243.637298,3805.310104,9943.556525,5622.858602,1.161010,0.498788,1.659798,0.069104,0.446567,0.515671,1.111522,0.421272,1.532794,0.068312,0.424204,0.492516,0.449401,0.078623,0.528023
3399,8441.482611,4403.013031,11287.670745,4080.338712,8353.970745,5271.614513,10817.676468,4002.303184,9688.351564,5605.072196,1.279161,0.538513,1.817674,0.070638,0.483707,0.554345,1.196486,0.457747,1.654233,0.069742,0.461448,0.531190,0.481408,0.084742,0.566150
3599,8167.666516,3512.792895,10855.375333,3506.353326,8259.382132,6651.375716,10408.115773,3445.583958,9561.851296,7411.346742,1.326899,0.570887,1.897786,0.072176,0.514835,0.587012,1.243802,0.488545,1.732347,0.071316,0.492761,0.564077,0.514843,0.090418,0.605261
3799,7909.891918,3269.949163,10446.012186,3077.475538,8067.060709,4605.275093,10015.819038,2954.477811,9336.158976,5273.697208,1.382902,0.607109,1.990011,0.073813,0.548868,0.622681,1.306447,0.521687,1.828134,0.072985,0.525395,0.598380,0.532270,0.095873,0.628143
3999,7758.772330,4887.500148,10090.343371,3332.635882,7957.461602,5875.078572,9676.995268,3239.343638,9179.110504,6195.189535,1.553314,0.644507,2.197822,0.075693,0.582981,0.658674,1.368071,0.555576,1.923647,0.074769,0.559513,0.634282,0.572401,0.101446,0.673846
4199,7613.342997,4704.756353,9766.583098,3291.377653,7819.664459,5063.721602,9364.520660,3115.028507,9055.178555,6576.539587,1.602181,0.676427,2.278608,0.090684,0.612455,0.703139,1.425677,0.584670,2.010347,0.089986,0.588025,0.678011,0.606834,0.107007,0.713842
4399,7474.600988,4561.018799,9467.560914,3188.095041,7659.364784,4293.071609,9075.751813,3011.606031,8913.631891,5941.151929,1.649436,0.711087,2.360523,0.091846,0.645492,0.737338,1.494423,0.616725,2.111148,0.091155,0.620602,0.711757,0.631913,0.112231,0.744144
4599,7362.229812,4890.063923,9185.189706,2973.023131,7533.415631,4762.534254,8806.609669,2885.482483,8761.734378,5419.989107,1.742273,0.748021,2.490295,0.093335,0.679729,0.773064,1.553316,0.650062,2.203379,0.092657,0.653851,0.746507,0.649358,0.117899,0.767257
4799,7226.007191,4092.886905,8937.965799,3251.815943,7418.559823,4776.876247,8563.784287,2978.800501,8624.885070,5477.350979,1.796726,0.784848,2.581574,0.095076,0.714170,0.809246,1.647566,0.684291,2.331857,0.094511,0.687030,0.781541,0.683671,0.123423,0.807094
4999,7156.501785,5488.372051,8728.482178,3700.875281,7304.880456,4576.575648,8364.798193,3589.131954,8527.790878,6197.530280,1.854261,0.820106,2.674366,0.096753,0.747431,0.844184,1.705601,0.716667,2.422268,0.096333,0.720880,0.817213,0.716385,0.128875,0.845259
5199,7080.237474,5173.629707,8578.826484,4837.434119,7244.730515,5740.981982,8222.574033,4666.970012,8478.522841,7246.821894,1.917157,0.855349,2.772506,0.108900,0.780633,0.889532,1.764979,0.749493,2.514472,0.109756,0.753894,0.863650,0.735018,0.134992,0.870010